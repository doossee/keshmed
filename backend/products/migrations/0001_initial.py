# Generated by Django 5.0 on 2023-12-13 13:23

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import mptt.fields
import versatileimagefield.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Brand name')),
                ('country', models.PositiveSmallIntegerField(verbose_name='Brand country')),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to='images/', verbose_name='Image')),
                ('image_ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', models.CharField(max_length=150, verbose_name='Category name')),
                ('name_ru', models.CharField(max_length=150, verbose_name='Название категории')),
                ('name_uz', models.CharField(max_length=150, verbose_name='Kategoriya nomi')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model', models.CharField(max_length=150, verbose_name='Product model')),
                ('title_en', models.CharField(max_length=250, verbose_name='Product title')),
                ('title_ru', models.CharField(max_length=250, verbose_name='Заголовок товара')),
                ('title_uz', models.CharField(max_length=250, verbose_name='Mahsulot sarlavhasi')),
                ('description_en', models.TextField(verbose_name='Product description')),
                ('description_ru', models.TextField(verbose_name='Описание товара')),
                ('description_uz', models.TextField(verbose_name='Mahsulot tavsifi')),
                ('condition', models.PositiveSmallIntegerField(choices=[(1, 'New'), (2, 'Used'), (3, 'OpenBox'), (4, 'Refurbished')], verbose_name='Product condition')),
                ('year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)], verbose_name='Procuct year')),
                ('warranty', models.PositiveSmallIntegerField(verbose_name='Product warranty')),
                ('shipping_from', models.PositiveSmallIntegerField(verbose_name='Shipping Country')),
                ('characteristics', models.JSONField(verbose_name='Product characteristics')),
                ('is_part', models.BooleanField(default=False, verbose_name='Is part')),
                ('for_sale', models.BooleanField(default=False, verbose_name='For Sale')),
                ('sales_areas', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), size=None, verbose_name='Sales Areas')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Product price')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.brand', verbose_name='Product brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category', verbose_name='Product category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to='images/', verbose_name='Image')),
                ('image_ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product', verbose_name='Image product')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(choices=[(1, 'Ok'), (2, 'Fine'), (3, 'Good'), (4, 'Amazing'), (5, 'Incredible')], verbose_name='Rate')),
                ('review', models.TextField(verbose_name='Review text')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='products.product', verbose_name='Rated product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL, verbose_name='Rated user')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
            },
        ),
    ]
